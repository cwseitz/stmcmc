/* Generated by Cython 0.29.19 */

#ifndef __PYX_HAVE__pypacmensl__callbacks__pacmensl_callbacks
#define __PYX_HAVE__pypacmensl__callbacks__pacmensl_callbacks

#include "Python.h"

#ifndef __PYX_HAVE_API__pypacmensl__callbacks__pacmensl_callbacks

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C int __pyx_f_10pypacmensl_9callbacks_18pacmensl_callbacks_call_py_prop_obj(int const , int const , int const , int const *, double *, void *);
__PYX_EXTERN_C int __pyx_f_10pypacmensl_9callbacks_18pacmensl_callbacks_call_py_t_fun_obj(double, int, double *, void *);
__PYX_EXTERN_C int __pyx_f_10pypacmensl_9callbacks_18pacmensl_callbacks_call_py_constr_obj(int, int, int, int *, int *, void *);
__PYX_EXTERN_C int __pyx_f_10pypacmensl_9callbacks_18pacmensl_callbacks_call_py_weight_fun(int, int *, int, double *, void *);

#endif /* !__PYX_HAVE_API__pypacmensl__callbacks__pacmensl_callbacks */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpacmensl_callbacks(void);
#else
PyMODINIT_FUNC PyInit_pacmensl_callbacks(void);
#endif

#endif /* !__PYX_HAVE__pypacmensl__callbacks__pacmensl_callbacks */
